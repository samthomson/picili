version: 2
dependencies:
  cache_directories:
    - ~/.composer/cache
    - "www-workspace/user-api-laravel/vendor"
jobs:
  build-spa:
    docker:
     - image: mhart/alpine-node
    working_directory: /picili
    steps:
     - checkout
     - run:
         name: "Build"
         command: |
           cd www-workspace/spa
           npm install -y
           npm rebuild node-sass
           npm run gulp
           npm run build
  lint-spa:
    docker:
     - image: mhart/alpine-node
    working_directory: /picili
    steps:
     - checkout
     - run:
         name: "Valid Typescript?"
         command: |
           cd www-workspace/spa
           npm install -y
           npm run lint
  test-api:
    docker:
     - image: php:7.1-apache
       environment:
         - DATABASE_NAME=picili
         - DB_HOST=127.0.0.1
         - DB_NAME_TESTING=picili_testing
         - DATABASE_NAME_TESTING=picili
         - MYSQL_USER=root
         - DB_PASSWORD=password
         - APP_KEY=base64:uynE8re8ybt2wabaBjqMwQvLczKlDSQJHCepqxmGffE=
         - JWT_SECRET=dQsobNAzIGnF4sx4PDRAaZWFUEMQulAV
         - ELASTICSEARCH_HOST=localhost
         - ELASTICSEARCH_INDEX=files
         - ELASTICSEARCH_INDEX_TESTING=files-testing
         - SEARCH_CONFIDENCE_THRESHOLD=30
     - image: mysql:5.7
       environment:
         - MYSQL_ROOT_PASSWORD=password
         - MYSQL_DATABASE=picili
     - image: docker.elastic.co/elasticsearch/elasticsearch:5.4.1
       environment:
         - xpack.security.enabled=false
     - image: laradock/php-fpm:1.4-71
    working_directory: /picili
    steps:
     - checkout
     - run: 
         name: Install server packages
         command: apt-get -qq update; apt-get -y install git libpng-dev mysql-client
     - run:
         name: Install PHP extensions
         command: docker-php-ext-install pdo_mysql gd
     - run:
        name: Install Composer
        command: |
          curl -sS https://getcomposer.org/installer | php
          mv composer.phar /usr/local/bin/composer
     - run: 
         name: Install php packages/dependencies
         command: |
           cd www-workspace/user-api-laravel
           composer install
     - run:
         name: Serve API Application
         background: true
         command: |
           cd www-workspace/user-api-laravel
           cp .env.testing .env
           cp public/spa.html public/index.html
           php artisan serve
     - run:  
         name: API tests (phpunit)
         command: |
           www-workspace/user-api-laravel/vendor/bin/phpunit -c www-workspace/user-api-laravel/phpunit.xml
  test-auto:
    working_directory: /picili
    docker:
     - image: php:7.1.27-apache-stretch
       environment:
         - DATABASE_NAME=picili
         - DB_HOST=127.0.0.1
         - DB_NAME_TESTING=picili_testing
         - DATABASE_NAME_TESTING=picili
         - MYSQL_USER=root
         - DB_PASSWORD=password
         - APP_KEY=base64:uynE8re8ybt2wabaBjqMwQvLczKlDSQJHCepqxmGffE=
         - JWT_SECRET=dQsobNAzIGnF4sx4PDRAaZWFUEMQulAV
         - ELASTICSEARCH_HOST=localhost
         - ELASTICSEARCH_INDEX=files
         - ELASTICSEARCH_INDEX_TESTING=files-testing
         - SEARCH_CONFIDENCE_THRESHOLD=30
     - image: mysql:5.7
       environment:
         - MYSQL_ROOT_PASSWORD=password
         - MYSQL_DATABASE=picili
     - image: docker.elastic.co/elasticsearch/elasticsearch:5.4.1
       environment:
         - xpack.security.enabled=false
    steps:
     - checkout
     - run: 
         name: Install server packages
         command: |
           apt-get -qq update
           apt-get -y install -y git libwebp-dev libjpeg-dev libpng-dev mysql-client
     - run:
         name: Install PHP extensions
         command: |
           docker-php-ext-install pdo_mysql
           docker-php-ext-install exif
     - run:
        name: Install Composer
        command: |
          curl -sS https://getcomposer.org/installer | php
          mv composer.phar /usr/local/bin/composer
     - run: 
         name: Install php packages/dependencies
         command: |
           cd www-workspace/auto
           composer install
     - run:
         name: seed test dirs
         command:  |
           cd www-workspace/auto
           php artisan db:seed --class=FolderSeeder --force
     - run:  
         name: AUTO tests (phpunit)
         command: |
           www-workspace/auto/vendor/bin/phpunit -c www-workspace/auto/phpunit-circle-ci.xml

workflows:
  version: 2
  all:
    jobs:
      - lint-spa
      - build-spa
      - test-api
      - test-auto